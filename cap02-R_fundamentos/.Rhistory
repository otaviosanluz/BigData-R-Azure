# Configurando o diretório de trabalho
# Coloque entre aspas o diretório de trabalho que você está usando no seu computador
# Não use diretórios com espaço no nome
setwd('C:/Users/otavio/Mundo/BigDataRAzure/Cap11_Machine_Learning')
getwd()
x <- seq(0, 100)
y <- 2 * x + 35
# Imprimindo as variáveis
x
y
# Gerando uma distribuição normal
y1 <- y + rnorm(101, 0, 50)
y1
hist(y1)
# Crie um plot do relacionamento de x e y1
plot(y1, x, main = 'Relacionamento')
# Crie um plot do relacionamento de x e y1
plot(y1, x, main = 'Relacionamento entre y1 e x')
# Crie um modelo de regressão para as duas variáveis x e y1
modelo <-
?lm
# Crie um modelo de regressão para as duas variáveis x e y1
modelo <- lm(y1~x)
modelo
modelo[1]
# Capture os coeficentes
summary(modelo)
# Capture os coeficentes
modelo
# Fórmula de Regressão
y2 <- a + b*x
# Capture os coeficentes
modelo[0]
# Capture os coeficentes
modelo[1]
# Capture os coeficentes
modelo[2]
# Capture os coeficentes
modelo[1:1]
# Capture os coeficentes
modelo[1:2]
# Capture os coeficentes
modelo[1, 1]
# Capture os coeficentes
modelo[1:, 1]
# Capture os coeficentes
modelo
a = 34.494
b = 2.005
# Visualize a linha de regressão
y2 <- a + (b * x)
y2
plot(y2)
# Simulando outras possíveis linhas de regressão
y3 <- (y2[51]-50*(b-1))+(b-1)*x
plot(y3)
y5 <- (y2[51]-50*(b+2))+(b+2)*x
plot(y5)
# Criando os dados
Idade <- c(9,13,14,21,15,18,20,8,14,23,16,21,10,12,20,
9,13,5,15,21)
Tempo <- c(17.87,13.75,12.72,6.98,11.01,10.48,10.19,19.11,
12.72,0.45,10.67,1.59,14.91,14.14,9.40,16.23,
12.74,20.64,12.34,6.44)
# Crie um Gráfico de Dispersão (ScatterPlot)
plot(Idade, Tempo)
# Crie um Gráfico de Dispersão (ScatterPlot)
plot(Tempo, Idade)
# Crie um Gráfico de Dispersão (ScatterPlot)
plot(Idade, Tempo)
# Criando os dados
alturas = c(176, 154, 138, 196, 132, 176, 181, 169, 150, 175)
pesos = c(82, 49, 53, 112, 47, 69, 77, 71, 62, 78)
plot(alturas, pesos, pch = 16, cex = 1.3, col = "blue",
main = "Altura x Peso",
ylab = "Peso Corporal (kg)",
xlab = "Altura (cm)")
# Crie o modelo de regressão
modelo <- lm(pesos~alturas)
# Visualizando o modelo
modelo
# Faça as previsões de pesos com base na nova lista de alturas
alturas2 = data.frame(c(179, 152, 134, 197, 131, 178, 185, 162, 155, 172))
# Plot
plot(alturas, pesos, pch = 16, cex = 1.3,
col = "blue",
main = "Altura x Peso",
ylab = "Peso (kg)",
xlab = "Altura (cm)")
# uma relação com os dados de x)
x <- seq(0, 100)
y <- 2 * x + 35
x
y
y1 <- y + rnorm(101, 0, 50)
y1
hist(y1)
hist(y1)
# Crie um plot do relacionamento de x e y1
plot(x, y1, main = 'Relacionamento entre y1 e x')
# Crie um modelo de regressão para as duas variáveis x e y1
modelo <- lm(y1~x)
modelo
class(modelo)
modelo <- lm(y1~x)
modelo
class(modelo)
a <- modelo$coefficients[1]
b <- modelo$coefficients[2]
# Fórmula de Regressão
y2 <- a + b*x
# Visualize a linha de regressão
y2 <- a + (b * x)
plot(y2)
# Visualize a linha de regressão
lines(x, y2)
# Visualize a linha de regressão
lines(x, y2, lwd = 2)
Idade <- c(9,13,14,21,15,18,20,8,14,23,16,21,10,12,20,
9,13,5,15,21)
Tempo <- c(17.87,13.75,12.72,6.98,11.01,10.48,10.19,19.11,
12.72,0.45,10.67,1.59,14.91,14.14,9.40,16.23,
12.74,20.64,12.34,6.44)
plot(Idade, Tempo)
# Crie um Gráfico de Dispersão (ScatterPlot)
plot(Tempo, Idade)
y2 <- a + b*x
lines(x, y2, lwd = 2)
lines(x, y2, lwd = 2)
x <- seq(0, 100)
y <- 2 * x + 35
x
y
y1 <- y + rnorm(101, 0, 50)
y1
# Crie um plot do relacionamento de x e y1
plot(x, y1, main = 'Relacionamento entre y1 e x')
# Crie um modelo de regressão para as duas variáveis x e y1
modelo <- lm(y1~x)
a <- modelo$coefficients[1]
b <- modelo$coefficients[2]
# Fórmula de Regressão
y2 <- a + b*x
lines(x, y2, lwd = 2)
# Crie um Gráfico de Dispersão (ScatterPlot)
plot(Tempo, Idade)
Idade <- c(9,13,14,21,15,18,20,8,14,23,16,21,10,12,20,
9,13,5,15,21)
Tempo <- c(17.87,13.75,12.72,6.98,11.01,10.48,10.19,19.11,
12.72,0.45,10.67,1.59,14.91,14.14,9.40,16.23,
12.74,20.64,12.34,6.44)
# Crie um Gráfico de Dispersão (ScatterPlot)
plot(Tempo, Idade)
# Crie um Gráfico de Dispersão (ScatterPlot)
plot(Idade, Tempo, xlab = 'Idade', ylab = 'Tempo de Reação)'
# Crie um Gráfico de Dispersão (ScatterPlot)
plot(Idade, Tempo, xlab = 'Idade', ylab = 'Tempo de Reação')
plot(Idade, Tempo, xlab = 'Idade', ylab = 'Tempo de Reação')
# Crie um Gráfico de Dispersão (ScatterPlot)
plot(Idade, Tempo, xlab = 'Idade', ylab = 'Tempo de Reação')
# Crie um modelo de regressão
modelo <- lm(Tempo, Idade)
# Crie um modelo de regressão
modelo <- lm(Tempo~Idade)
modelo
reta <- 25.8134 - (0.9491 * Idade)
# Crie o gráfico da reta
lines(Idade, reta)
# Criando os dados
alturas = c(176, 154, 138, 196, 132, 176, 181, 169, 150, 175)
pesos = c(82, 49, 53, 112, 47, 69, 77, 71, 62, 78)
plot(alturas, pesos, pch = 16, cex = 1.3, col = "blue",
main = "Altura x Peso",
ylab = "Peso Corporal (kg)",
xlab = "Altura (cm)")
# Crie o modelo de regressão
modelo <- lm(pesos~alturas)
# Visualizando o modelo
modelo
# Gere a linha de regressão
reta <- -70.4627 - (0.8528 * Idade)
# Gere a linha de regressão
reta <- -70.4627 - (0.8528 * alturas)
lines(alturas, reta)
# Gere a linha de regressão
abline(-70.4627, 0.8528)
# Faça as previsões de pesos com base na nova lista de alturas
alturas2 = data.frame(c(179, 152, 134, 197, 131, 178, 185, 162, 155, 172))
# Plot
plot(alturas, pesos, pch = 16, cex = 1.3,
col = "blue",
main = "Altura x Peso",
ylab = "Peso (kg)",
xlab = "Altura (cm)")
# Construindo a linha de regressão
abline(lm(pesos ~ alturas))
# Gerando um gráfico com os valores residuais
for (k in 1: num)
lines(c(alturas[k], alturas[k]),
c(pesos[k], pesos[k]))
num <- length(alturas)
num
for (k in 1: num)
lines(c(alturas[k], alturas[k]),
c(pesos[k], pesos[k]))
for (k in 1: num)
lines(c(alturas[k], alturas[k]),
c(pesos[k], pesos[k]))
# Gerando gráficos com a distribuição dos resíduos
par(mfrow = c(2,2))
plot(modelo)
previsao <- predict(modelo, alturas2)
previsao
# Configurando o diretório de trabalho
# Coloque entre aspas o diretório de trabalho que você está usando no seu computador
# Não use diretórios com espaço no nome
setwd('C:/Users/otavio/Mundo/BigDataRAzure/Cap11_Machine_Learning')
getwd()
# install.packages("ggplot2")
install.packages("ggthemes")
library(ggplot2)
library(ggthemes)
library(dplyr)
df <- read.csv2('estudantes.csv')
library(ggplot2)
library(ggthemes)
library(dplyr)
# Carregando o dataset
df <- read.csv2('estudantes.csv')
# Explorando os dados
head(df)
summary(df)
str(df)
any(is.na(df))
View(df)
View(df)
# Obtendo as colunas numéricas
colunas_numericas <- sapply(df, is.numeric)
colunas_numericas
data_cor <- cor(df[, colunas_numericas])
data_cor
head(data_cor)
# Pacotes para visualizar a análise de correlação
install.packages('corrgram')
install.packages('corrplot')
library(corrgram)
library(corrplot)
# Criando um corrplot
corrplot(data_cor, method = 'color')
setwd("C:/Users/otavio/Mundo/Github/BigData-R-Azure/cap02-R_fundamentos")
setwd
setwd("C:/Users/otavio/Mundo/Github/BigData-R-Azure/cap02-R_fundamentos")
getwd()
# Nome dos contributors
contributors()
# Licensa
license()
# Licensa
license()
# Informação sobre a sessão
sessionInfo()
# Imprimir na tela
print('Estou iniciando minha caminhada na carreira de Cientista de Dados')
# Criar gráficos
plot(1:25)
